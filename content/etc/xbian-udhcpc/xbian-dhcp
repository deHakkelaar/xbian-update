#!/bin/sh
# Xbian dhcp script.
#
# Based on the busybox example scripts

RESOLV_CONF="/etc/resolv.conf"
. /etc/xbian-initramfs/cnvres-code.sh 

ifdwn() {
    ip link set ${interface} down || :
    return 0
}

case $1 in
    bound|renew)

        ip link set ${interface} up || :

        [ -z "$METHOD" ] && METHOD=dhcp
        sed -i '/127.0.2.1/d' /etc/hosts
        [ -z "$dhcp_hostname" ] && dhcp_hostname=$(hostname -s)
        echo DHCPDISCOVER >&2
        # <client-ip>:<server-ip>:<gw-ip>:<netmask>:<hostname>:<device>:<autoconf>
        ipconfig -t 30 "::::${dhcp_hostname}:${interface}:${METHOD}"  1>/dev/null || \
            ip link set $interface down; 
            ipconfig -t 60 "::::${dhcp_hostname}:${interface}:${METHOD}" 1>/dev/null
        [ $? -eq 124 ] && { echo Terminated >&2; ip link set $interface down || :; exit 1; }
        echo bound >&2

        R=$(update_resolv)
        if echo $R | grep -q nameserver; then 
            if [ -x /sbin/resolvconf ]; then
                echo "$R" | resolvconf -a "${interface}.udhcpc"
            else
                echo "$R" > "$RESOLV_CONF"
            fi
        fi
        leasetime=$(cat /run/net-$interface.conf | grep DHCPLEASETIME | awk -F'=' '{print $2}' |tr -d "'")
        dnshostname=$(awk -F'=' '$1 ~ /HOSTNAME/ {print $2}' /run/net-$interface.conf | tr -d "'" )
        if [ -n "$dnshostname" ]; then
            dnsdomain=$(awk -F'=' '$1 ~ /DNSDOMAIN/ {print $2}' /run/net-$interface.conf | tr -d "'" )
            [ -z "$dnsdomain" ] || dnshostname=$dnshostname.$dnsdomain
            hostname "$dnshostname"
            if grep -q 127.0.2.1 /etc/hosts; then
                sed -i "s%127.0.2.1.*%127.0.2.1 $dnshostname $(hostname -s)%" /etc/hosts
            else
                echo "127.0.2.1 $dnshostname $(hostname -s)" >> /etc/hosts
            fi
        fi
	;;

    deconfig)
	interface=${interface} ifdwn
	if [ -x /sbin/resolvconf ]; then
	    resolvconf -d "${interface}.udhcpc"
	fi
	#[ -f "$pidfile" ] && rm -fr $pidfile
	exit 0
	;;

    leasefail)
	echo "$0: Lease failed: $message"
	;;

    nak)
	echo "$0: Received a NAK: $message"
	;;

    slp)
        ;;

    *)
	echo "$0: Unknown udhcpc command: $1";
	exit 1;
	;;
esac

if [ "$1" = bound ]; then
    pidfile=$pidfile interface=$interface leasetime=$leasetime $0 slp &
    exit 0
fi

trap 'ifdwn' USR2 KILL TERM
sleep $((leasetime + 50)) & spid=$! && echo $spid > $pidfile

if wait "$spid"; then
    pidfile="$pidfile" interface="$interface" exec $0 renew
else
    pds="$(cat /run/wpa_supplicant.$interface.pid 2>/dev/null)"; [ -z "$pds" ] || kill "$pds" || :
    rm -fr "/run/wpa_supplicant.$interface.pid"
    pidfile="$pidfile" interface="$interface" $0 deconfig
fi
